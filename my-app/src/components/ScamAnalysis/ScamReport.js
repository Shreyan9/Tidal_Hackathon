import React, { useState } from 'react';
import './ScamReport.css';

const ScamReport = ({ analysis }) => {
  const [activeTab, setActiveTab] = useState('transcript');
  
  if (!analysis) return null;
  
  const { 
    transcript, 
    scamScore, 
    threatLevel, 
    indicators, 
    matchedPatterns,
    audioUrl
  } = analysis;
  
  // Determine threat level color
  const getThreatColor = (level) => {
    switch(level.toLowerCase()) {
      case 'high': return 'red';
      case 'medium': return 'orange';
      case 'low': return '#ffae42';
      default: return 'green';
    }
  };
  
  // Highlight suspicious phrases in transcript
  const highlightTranscript = (text) => {
    // This is a simple implementation - in a real app, you'd use more sophisticated pattern matching
    let highlightedText = text;
    const suspiciousPhrases = [
      'urgent', 'immediately', 'suspicious activity', 'verify your identity',
      'your bank', 'account locked', 'security breach', 'call back'
    ];
    
    suspiciousPhrases.forEach(phrase => {
      const regex = new RegExp(`(${phrase})`, 'gi');
      highlightedText = highlightedText.replace(regex, '<span class="suspicious-text">$1</span>');
    });
    
    return <div dangerouslySetInnerHTML={{ __html: highlightedText }} />;
  };

  return (
    <div className="scam-report">
      <div className="report-header">
        <h2>Scam Analysis Report</h2>
        <div className="threat-indicator" style={{ backgroundColor: getThreatColor(threatLevel) }}>
          Threat Level: {threatLevel}
        </div>
        <div className="scam-score">
          <div className="score-circle" style={{ 
            background: `conic-gradient(red ${scamScore}%, #f0f0f0 0)` 
          }}>
            <span>{scamScore}%</span>
          </div>
          <p>Scam Probability</p>
        </div>
      </div>
      
      <div className="report-tabs">
        <button 
          className={activeTab === 'transcript' ? 'active' : ''} 
          onClick={() => setActiveTab('transcript')}
        >
          Transcript & Audio
        </button>
        <button 
          className={activeTab === 'indicators' ? 'active' : ''} 
          onClick={() => setActiveTab('indicators')}
        >
          Scam Indicators
        </button>
        <button 
          className={activeTab === 'action' ? 'active' : ''} 
          onClick={() => setActiveTab('action')}
        >
          Take Action
        </button>
      </div>
      
      <div className="report-content">
        {activeTab === 'transcript' && (
          <div className="transcript-section">
            <div className="audio-player">
              <h3>Audio Recording</h3>
              <audio controls src={audioUrl} style={{ width: '100%' }} />
            </div>
            <div className="transcript">
              <h3>Transcript</h3>
              <div className="transcript-text">
                {highlightTranscript(transcript)}
              </div>
            </div>
          </div>
        )}
        
        {activeTab === 'indicators' && (
          <div className="indicators-section">
            <div className="scam-indicators">
              <h3>Detected Scam Indicators</h3>
              <ul>
                {indicators.map((indicator, index) => (
                  <li key={index}>{indicator}</li>
                ))}
              </ul>
            </div>
            <div className="matched-patterns">
              <h3>Matched Scam Patterns</h3>
              <ul>
                {matchedPatterns.map((pattern, index) => (
                  <li key={index}>{pattern}</li>
                ))}
              </ul>
            </div>
          </div>
        )}
        
        {activeTab === 'action' && (
          <div className="action-section">
            <h3>Take Action</h3>
              <div className="action-button-wrapper">
                <a 
                  href="https://www.cstx.gov/departments___city_hall/police" 
                  target="_blank" 
                  rel="noopener noreferrer"
                  className="report-button centered"
                >
                  Report to Authorities
                </a>
              </div>
            <div className="report-template">
              <h4>Report Template</h4>
              <textarea 
                readOnly 
                value={`Scam Report
Date: ${new Date().toLocaleDateString()}
Threat Level: ${threatLevel}
Scam Score: ${scamScore}%

Detected Indicators:
${indicators.join('\n')}

Matched Patterns:
${matchedPatterns.join('\n')}

Transcript:
"${transcript}"

This report was generated by Post-Call Scam Forensics tool.`}
              />
              
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default ScamReport;
